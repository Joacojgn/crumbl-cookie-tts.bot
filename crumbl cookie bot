import discord
from discord.ext import commands
from gtts import gTTS
import os

TOKEN = "TU_TOKEN_AQUI"  # üîë pon√© tu token del bot

intents = discord.Intents.default()
intents.message_content = True
intents.voice_states = True
intents.messages = True

bot = commands.Bot(command_prefix="!", intents=intents)

# Guardamos el canal de texto donde debe leer mensajes
active_text_channel = None

@bot.event
async def on_ready():
    print(f"‚úÖ Bot conectado como {bot.user}")

@bot.command()
async def join(ctx):
    """El bot entra al canal de voz y se activa en ese canal de texto"""
    global active_text_channel
    if ctx.author.voice:
        channel = ctx.author.voice.channel
        await channel.connect()
        active_text_channel = ctx.channel
        await ctx.send(f"üé§ Conectado a **{channel}** y leer√© este canal de texto.")
    else:
        await ctx.send("‚ö†Ô∏è Primero m√©tete a un canal de voz.")

@bot.command()
async def leave(ctx):
    """Desconectar el bot"""
    global active_text_channel
    if ctx.voice_client:
        await ctx.voice_client.disconnect()
        active_text_channel = None
        await ctx.send("üëã Desconectado.")
    else:
        await ctx.send("‚ö†Ô∏è No estoy en un canal de voz.")

@bot.event
async def on_message(message):
    """Lee autom√°ticamente los mensajes del canal activado"""
    global active_text_channel

    # Ignora mensajes del bot mismo
    if message.author == bot.user:
        return

    # Solo lee si el canal activo coincide
    if active_text_channel and message.channel == active_text_channel:
        if message.guild.voice_client:  # Si est√° conectado a voz
            tts = gTTS(text=message.content, lang="es", slow=False)
            filename = "tts.mp3"
            tts.save(filename)

            voice_client = message.guild.voice_client
            if not voice_client.is_playing():
                voice_client.play(discord.FFmpegPCMAudio(filename),
                                  after=lambda e: os.remove(filename))

    # Importante para que sigan funcionando los comandos
    await bot.process_commands(message)

bot.run(TOKEN)
